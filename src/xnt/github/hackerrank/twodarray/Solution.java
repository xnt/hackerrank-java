package xnt.github.hackerrank.twodarray;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

/**
 * https://www.hackerrank.com/challenges/2d-array
 */
public class Solution {

    /**
     * Calculates the sum of an hourglass, assuming that x and y represent its centre
     * @param matrix the matrix
     * @param x x-pos of the hourglass centre
     * @param y y-pos of the hourglass centre
     * @return the sum of the hourglass numbers
     */
    private static int calculateHourglass(int[][] matrix, int x, int y) {
        // Initialize the sum with the centre itself
        int sum = matrix[x][y];

        // Swipe left to right, row above and below
        for(int i = -1; i < 2; i++) {
            sum += matrix[x-1][y+i] + matrix[x+1][y+i];
        }

        return sum;
    }

    /**
     * Returns the highest sum on hourglasses
     * @param arr the 2-dimensional array
     * @return the highest sum of possible hourglasses
     */
    private static int hourglassSum(int[][] arr) {

        // Initialize with the min possible value (note that numbers can be negative)
        int highest = Integer.MIN_VALUE;

        // Look for centres, skip first and last row...
        for(int i = 1; i < (arr.length - 1); i++) {

            // .. and first and last column
            for(int j = 1; j < (arr.length -1); j++) {

                // For each centre, calculate sum
                int hourglass = calculateHourglass(arr, i, j);

                // Replace if higher (colud have been ternary assignation, too)
                if(calculateHourglass(arr, i, j) > highest) {
                    highest = hourglass;
                }
            }
        }

        return highest;
    }

    //<editor-fold desc="Autogenerated code">
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int[][] arr = new int[6][6];

        for (int i = 0; i < 6; i++) {
            String[] arrRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowItems[j]);
                arr[i][j] = arrItem;
            }
        }

        int result = hourglassSum(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
    //</editor-fold>
}